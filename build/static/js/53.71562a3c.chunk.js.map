{"version":3,"file":"static/js/53.71562a3c.chunk.js","mappings":"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","sources":["components/ui/Input.tsx","components/contact/ContactForm.tsx","pages/ContactPage.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  hasError?: boolean;\n  fullWidth?: boolean;\n  label?: string;\n  errorMessage?: string;\n  helpText?: string;\n}\n\nconst InputContainer = styled.div<{ fullWidth?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  ${({ fullWidth }) => fullWidth && css`width: 100%;`}\n`;\n\nconst Label = styled.label`\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst StyledInput = styled.input<{ hasError?: boolean }>`\n  padding: 12px 16px;\n  border: 1px solid ${({ hasError, theme }) =>\n    hasError ? theme.colors.secondary : '#ddd'};\n  border-radius: 6px;\n  font-size: 1rem;\n  transition: all 0.2s ease-in-out;\n  background-color: ${({ theme }) => theme.colors.white};\n\n  &:focus {\n    outline: none;\n    border-color: ${({ hasError, theme }) =>\n      hasError ? theme.colors.secondary : theme.colors.primary};\n    box-shadow: 0 0 0 3px ${({ hasError, theme }) =>\n      hasError ? `${theme.colors.secondary}22` : `${theme.colors.primary}22`};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.colors.lightGray};\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.lightText};\n  }\n`;\n\nconst ErrorMessage = styled.span`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n\nconst HelpText = styled.span`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.lightText};\n`;\n\nexport const Input: React.FC<InputProps> = ({\n  hasError,\n  fullWidth = false,\n  label,\n  errorMessage,\n  helpText,\n  id,\n  ...props\n}) => {\n  const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n  return (\n    <InputContainer fullWidth={fullWidth}>\n      {label && (\n        <Label htmlFor={inputId}>\n          {label}\n          {props.required && <span style={{ color: 'red' }}> *</span>}\n        </Label>\n      )}\n      <StyledInput\n        id={inputId}\n        hasError={hasError || !!errorMessage}\n        {...props}\n      />\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      {helpText && !errorMessage && <HelpText>{helpText}</HelpText>}\n    </InputContainer>\n  );\n};","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { ContactFormData, FormErrors } from '../../types';\nimport { useToast } from '../../context/ToastContext';\nimport { Input } from '../ui/Input';\nimport { Button } from '../ui/Button';\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 600px;\n  width: 100%;\n`;\n\nconst TextArea = styled.textarea<{ hasError?: boolean }>`\n  padding: 12px 16px;\n  border: 1px solid ${({ hasError, theme }) =>\n    hasError ? theme.colors.secondary : '#ddd'};\n  border-radius: 6px;\n  font-size: 1rem;\n  font-family: inherit;\n  min-height: 150px;\n  resize: vertical;\n  transition: all 0.2s ease-in-out;\n  background-color: ${({ theme }) => theme.colors.white};\n\n  &:focus {\n    outline: none;\n    border-color: ${({ hasError, theme }) =>\n      hasError ? theme.colors.secondary : theme.colors.primary};\n    box-shadow: 0 0 0 3px ${({ hasError, theme }) =>\n      hasError ? `${theme.colors.secondary}22` : `${theme.colors.primary}22`};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.colors.lightGray};\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.lightText};\n  }\n`;\n\nconst TextAreaContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nconst Label = styled.label`\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst ErrorMessage = styled.span`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n\nconst SuccessMessage = styled.div`\n  background-color: #d4edda;\n  color: #155724;\n  padding: 16px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #c3e6cb;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &::before {\n    content: '✓';\n    font-weight: bold;\n    font-size: 1.2rem;\n  }\n`;\n\nconst RequiredIndicator = styled.span`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-left: 4px;\n`;\n\nexport const ContactForm: React.FC = () => {\n  const [formData, setFormData] = useState<ContactFormData>({\n    fullName: '',\n    email: '',\n    subject: '',\n    body: '',\n  });\n\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const { addToast } = useToast();\n\n  const validateEmail = useCallback((email: string): boolean => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email.toLowerCase());\n  }, []);\n\n  const validateForm = useCallback((): boolean => {\n    const newErrors: FormErrors = {};\n\n    if (!formData.fullName.trim()) {\n      newErrors.fullName = 'Full name is required';\n    } else if (formData.fullName.trim().length < 3) {\n      newErrors.fullName = 'Full name must be at least 3 characters';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!validateEmail(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.subject.trim()) {\n      newErrors.subject = 'Subject is required';\n    } else if (formData.subject.trim().length < 3) {\n      newErrors.subject = 'Subject must be at least 3 characters';\n    }\n\n    if (!formData.body.trim()) {\n      newErrors.body = 'Message is required';\n    } else if (formData.body.trim().length < 3) {\n      newErrors.body = 'Message must be at least 3 characters';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [formData, validateEmail]);\n\n  const handleChange = useCallback((\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: undefined }));\n    }\n  }, [errors]);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      addToast({\n        type: 'error',\n        title: 'Validation Error',\n        message: 'Please correct the errors in the form.',\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      console.log('Form submitted:', formData);\n\n      // Reset form\n      setFormData({\n        fullName: '',\n        email: '',\n        subject: '',\n        body: '',\n      });\n\n      setSubmitted(true);\n      addToast({\n        type: 'success',\n        title: 'Message Sent!',\n        message: 'Thank you for your message. We\\'ll get back to you soon.',\n      });\n\n      // Hide success message after 5 seconds\n      setTimeout(() => {\n        setSubmitted(false);\n      }, 5000);\n\n    } catch (error) {\n      addToast({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to send message. Please try again.',\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      {submitted && (\n        <SuccessMessage>\n          Your message has been sent successfully! We'll get back to you soon.\n        </SuccessMessage>\n      )}\n\n      <FormContainer onSubmit={handleSubmit} noValidate>\n        <Input\n          type=\"text\"\n          name=\"fullName\"\n          label=\"Full Name\"\n          value={formData.fullName}\n          onChange={handleChange}\n          errorMessage={errors.fullName}\n          required\n          fullWidth\n          placeholder=\"Enter your full name\"\n          disabled={isSubmitting}\n        />\n\n        <Input\n          type=\"email\"\n          name=\"email\"\n          label=\"Email Address\"\n          value={formData.email}\n          onChange={handleChange}\n          errorMessage={errors.email}\n          required\n          fullWidth\n          placeholder=\"Enter your email address\"\n          disabled={isSubmitting}\n        />\n\n        <Input\n          type=\"text\"\n          name=\"subject\"\n          label=\"Subject\"\n          value={formData.subject}\n          onChange={handleChange}\n          errorMessage={errors.subject}\n          required\n          fullWidth\n          placeholder=\"Enter the subject of your message\"\n          disabled={isSubmitting}\n        />\n\n        <TextAreaContainer>\n          <Label htmlFor=\"body\">\n            Message\n            <RequiredIndicator>*</RequiredIndicator>\n          </Label>\n          <TextArea\n            id=\"body\"\n            name=\"body\"\n            value={formData.body}\n            onChange={handleChange}\n            hasError={!!errors.body}\n            placeholder=\"Enter your message here...\"\n            disabled={isSubmitting}\n            required\n            aria-describedby={errors.body ? 'body-error' : undefined}\n          />\n          {errors.body && (\n            <ErrorMessage id=\"body-error\" role=\"alert\">\n              {errors.body}\n            </ErrorMessage>\n          )}\n        </TextAreaContainer>\n\n        <Button\n          type=\"submit\"\n          size=\"large\"\n          isLoading={isSubmitting}\n          disabled={isSubmitting}\n          style={{ alignSelf: 'flex-start' }}\n        >\n          {isSubmitting ? 'Sending...' : 'Send Message'}\n        </Button>\n      </FormContainer>\n    </>\n  );\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { ContactForm } from '../components/contact/ContactForm';\n\nconst ContactContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nconst Header = styled.div`\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  margin: 0 0 16px 0;\n  color: ${({ theme }) => theme.colors.text};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst Subtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${({ theme }) => theme.colors.lightText};\n  margin: 0;\n  line-height: 1.5;\n`;\n\nconst FormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst ContactPage: React.FC = () => {\n  return (\n    <ContactContainer>\n      <Header>\n        <Title>Get in Touch</Title>\n        <Subtitle>\n          Have a question, suggestion, or need support? We'd love to hear from you.\n          Fill out the form below and we'll get back to you as soon as possible.\n        </Subtitle>\n      </Header>\n\n      <FormWrapper>\n        <ContactForm />\n      </FormWrapper>\n    </ContactContainer>\n  );\n};\n\nexport default ContactPage;"],"names":["InputContainer","styled","div","_ref","fullWidth","css","Label","label","_ref2","theme","colors","text","StyledInput","input","_ref3","hasError","secondary","_ref4","white","_ref5","primary","_ref6","_ref7","lightGray","_ref8","lightText","ErrorMessage","span","_ref9","HelpText","_ref10","Input","_ref11","errorMessage","helpText","id","props","inputId","Math","random","toString","substr","_jsxs","children","htmlFor","required","_jsx","style","color","FormContainer","form","TextArea","textarea","TextAreaContainer","SuccessMessage","RequiredIndicator","ContactForm","formData","setFormData","useState","fullName","email","subject","body","errors","setErrors","isSubmitting","setIsSubmitting","submitted","setSubmitted","addToast","useToast","validateEmail","useCallback","test","toLowerCase","validateForm","newErrors","trim","length","Object","keys","handleChange","e","name","value","target","prev","undefined","_Fragment","onSubmit","async","preventDefault","Promise","resolve","setTimeout","console","log","type","title","message","error","noValidate","onChange","placeholder","disabled","role","Button","size","isLoading","alignSelf","ContactContainer","Header","Title","h1","breakpoints","mobile","Subtitle","p","FormWrapper","ContactPage"],"sourceRoot":""}