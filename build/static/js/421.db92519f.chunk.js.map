{"version":3,"file":"static/js/421.db92519f.chunk.js","mappings":"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","sources":["components/ui/Card.tsx","components/cart/CartItem.tsx","pages/CartPage.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface CardProps {\n  children: React.ReactNode;\n  variant?: 'default' | 'outlined' | 'elevated';\n  padding?: 'none' | 'small' | 'medium' | 'large';\n  hover?: boolean;\n  className?: string;\n  onClick?: () => void;\n}\n\nconst getPaddingStyles = (padding: CardProps['padding']) => {\n  switch (padding) {\n    case 'none':\n      return css`padding: 0;`;\n    case 'small':\n      return css`padding: 12px;`;\n    case 'large':\n      return css`padding: 24px;`;\n    default:\n      return css`padding: 16px;`;\n  }\n};\n\nconst getVariantStyles = (variant: CardProps['variant']) => {\n  switch (variant) {\n    case 'outlined':\n      return css`\n        background-color: transparent;\n        border: 1px solid #e0e0e0;\n        box-shadow: none;\n      `;\n    case 'elevated':\n      return css`\n        background-color: ${({ theme }) => theme.colors.white};\n        border: none;\n        box-shadow: ${({ theme }) => theme.shadows.medium};\n      `;\n    default:\n      return css`\n        background-color: ${({ theme }) => theme.colors.white};\n        border: none;\n        box-shadow: ${({ theme }) => theme.shadows.small};\n      `;\n  }\n};\n\nconst StyledCard = styled.div<CardProps>`\n  border-radius: 8px;\n  transition: all 0.3s ease;\n\n  ${({ variant }) => getVariantStyles(variant)}\n  ${({ padding }) => getPaddingStyles(padding)}\n\n  ${({ hover }) => hover && css`\n    cursor: pointer;\n\n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: ${({ theme }) => theme.shadows.medium};\n    }\n  `}\n\n  ${({ onClick }) => onClick && css`\n    cursor: pointer;\n  `}\n`;\n\nexport const Card: React.FC<CardProps> = ({\n  children,\n  variant = 'default',\n  padding = 'medium',\n  hover = false,\n  className,\n  onClick,\n}) => {\n  return (\n    <StyledCard\n      variant={variant}\n      padding={padding}\n      hover={hover}\n      className={className}\n      onClick={onClick}\n    >\n      {children}\n    </StyledCard>\n  );\n};","import React, { memo, useState } from 'react';\nimport styled from 'styled-components';\nimport { CartItem as CartItemType } from '../../types';\nimport { useCart } from '../../hooks/useCart';\nimport { Button } from '../ui/Button';\n\ninterface CartItemProps {\n  item: CartItemType;\n}\n\nconst ItemContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  padding: 16px;\n  border: 1px solid ${({ theme }) => theme.colors.lightGray};\n  border-radius: 8px;\n  margin-bottom: 16px;\n  background-color: ${({ theme }) => theme.colors.white};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: 12px;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  flex-shrink: 0;\n  width: 100px;\n  height: 100px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\n    align-self: center;\n  }\n`;\n\nconst ItemImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 6px;\n`;\n\nconst ImagePlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.colors.lightGray};\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.colors.lightText};\n  font-size: 0.8rem;\n  text-align: center;\n`;\n\nconst ItemInfo = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst ItemTitle = styled.h3`\n  font-size: 1.1rem;\n  margin: 0;\n  color: ${({ theme }) => theme.colors.text};\n  line-height: 1.3;\n`;\n\nconst PriceContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\n\nconst Price = styled.span`\n  font-size: 1.1rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primary};\n`;\n\nconst OriginalPrice = styled.span`\n  font-size: 0.9rem;\n  text-decoration: line-through;\n  color: ${({ theme }) => theme.colors.lightText};\n`;\n\nconst ItemControls = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: auto;\n  gap: 12px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 8px;\n  }\n`;\n\nconst QuantityControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst QuantityButton = styled(Button).attrs({\n  variant: 'outline',\n  size: 'small',\n})`\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  font-size: 1.2rem;\n  line-height: 1;\n`;\n\nconst QuantityDisplay = styled.span`\n  font-size: 1rem;\n  font-weight: 500;\n  min-width: 24px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst SubtotalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 4px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\n    align-items: center;\n  }\n`;\n\nconst SubtotalLabel = styled.span`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.lightText};\n`;\n\nconst Subtotal = styled.span`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst RemoveButton = styled(Button).attrs({\n  variant: 'ghost',\n  size: 'small',\n})`\n  color: ${({ theme }) => theme.colors.secondary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.secondary}11;\n  }\n`;\n\nconst CartItemComponent: React.FC<CartItemProps> = ({ item }) => {\n  const { updateQuantity, removeFromCart } = useCart();\n  const [imageError, setImageError] = useState(false);\n\n  const handleQuantityChange = (newQuantity: number) => {\n    if (newQuantity >= 1) {\n      updateQuantity(item.id, newQuantity);\n    }\n  };\n\n  const handleRemove = () => {\n    if (window.confirm(`Remove ${item.title} from your cart?`)) {\n      removeFromCart(item.id);\n    }\n  };\n\n  const subtotal = (item.discountedPrice * item.quantity).toFixed(2);\n  const hasDiscount = item.price !== item.discountedPrice;\n\n  return (\n    <ItemContainer>\n      <ImageContainer>\n        {!imageError && item.image?.url ? (\n          <ItemImage\n            src={item.image.url}\n            alt={item.image.alt || item.title}\n            onError={() => setImageError(true)}\n            loading=\"lazy\"\n          />\n        ) : (\n          <ImagePlaceholder>\n            No Image\n          </ImagePlaceholder>\n        )}\n      </ImageContainer>\n\n      <ItemInfo>\n        <ItemTitle>{item.title}</ItemTitle>\n\n        <PriceContainer>\n          <Price>${item.discountedPrice.toFixed(2)}</Price>\n          {hasDiscount && (\n            <OriginalPrice>${item.price.toFixed(2)}</OriginalPrice>\n          )}\n        </PriceContainer>\n\n        <ItemControls>\n          <QuantityControls>\n            <QuantityButton\n              onClick={() => handleQuantityChange(item.quantity - 1)}\n              disabled={item.quantity <= 1}\n              aria-label=\"Decrease quantity\"\n            >\n              −\n            </QuantityButton>\n            <QuantityDisplay>\n              {item.quantity}\n            </QuantityDisplay>\n            <QuantityButton\n              onClick={() => handleQuantityChange(item.quantity + 1)}\n              aria-label=\"Increase quantity\"\n            >\n              +\n            </QuantityButton>\n          </QuantityControls>\n\n          <SubtotalContainer>\n            <SubtotalLabel>Subtotal</SubtotalLabel>\n            <Subtotal>${subtotal}</Subtotal>\n          </SubtotalContainer>\n\n          <RemoveButton onClick={handleRemove}>\n            Remove\n          </RemoveButton>\n        </ItemControls>\n      </ItemInfo>\n    </ItemContainer>\n  );\n};\n\nexport const CartItem = memo(CartItemComponent);","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useCart } from '../hooks/useCart';\nimport { useToast } from '../context/ToastContext';\nimport { CartItem } from '../components/cart/CartItem';\nimport { Button } from '../components/ui/Button';\nimport { Card } from '../components/ui/Card';\n\nconst CartContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nconst CartContent = styled.div`\n  flex: 2;\n`;\n\nconst CartHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.lightGray};\n`;\n\nconst CartTitle = styled.h1`\n  font-size: 1.8rem;\n  margin: 0;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst CartItemCount = styled.span`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.lightText};\n`;\n\nconst EmptyCart = styled.div`\n  text-align: center;\n  padding: 80px 20px;\n`;\n\nconst EmptyCartIcon = styled.div`\n  font-size: 4rem;\n  margin-bottom: 16px;\n  opacity: 0.3;\n`;\n\nconst EmptyCartMessage = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 8px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst EmptyCartSubtext = styled.p`\n  font-size: 1rem;\n  margin-bottom: 24px;\n  color: ${({ theme }) => theme.colors.lightText};\n`;\n\nconst CartSummary = styled(Card)`\n  flex: 1;\n  height: fit-content;\n  position: sticky;\n  top: 20px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    position: static;\n  }\n`;\n\nconst SummaryTitle = styled.h2`\n  font-size: 1.3rem;\n  margin: 0 0 16px 0;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst SummaryRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  font-size: 1rem;\n\n  &:last-of-type {\n    margin-top: 16px;\n    padding-top: 16px;\n    border-top: 2px solid ${({ theme }) => theme.colors.lightGray};\n    font-weight: bold;\n    font-size: 1.2rem;\n  }\n`;\n\nconst SummaryLabel = styled.span`\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst SummaryValue = styled.span`\n  color: ${({ theme }) => theme.colors.text};\n  font-weight: 500;\n`;\n\nconst CheckoutButton = styled(Button).attrs({\n  size: 'large',\n  fullWidth: true,\n})`\n  margin-top: 20px;\n`;\n\nconst ContinueShoppingButton = styled(Button).attrs({\n  variant: 'outline',\n  size: 'large',\n})``;\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst ClearCartButton = styled(Button).attrs({\n  variant: 'ghost',\n  size: 'small',\n})`\n  color: ${({ theme }) => theme.colors.secondary};\n  align-self: flex-start;\n`;\n\nconst CartPage: React.FC = () => {\n  const { cartItems, getTotalPrice, clearCart, getItemCount } = useCart();\n  const { addToast } = useToast();\n  const navigate = useNavigate();\n\n  const totalItems = getItemCount();\n  const subtotal = getTotalPrice();\n  const shipping: number = 0; // Free shipping\n  const tax = subtotal * 0.08; // 8% tax\n  const total = subtotal + shipping + tax;\n\n  const handleCheckout = () => {\n    if (cartItems.length === 0) return;\n\n    clearCart();\n    addToast({\n      type: 'success',\n      title: 'Order Placed!',\n      message: 'Thank you for your purchase. Your order has been confirmed.',\n    });\n    navigate('/checkout-success');\n  };\n\n  const handleContinueShopping = () => {\n    navigate('/');\n  };\n\n  const handleClearCart = () => {\n    if (window.confirm('Are you sure you want to clear your cart?')) {\n      clearCart();\n      addToast({\n        type: 'info',\n        title: 'Cart Cleared',\n        message: 'All items have been removed from your cart.',\n      });\n    }\n  };\n\n  if (cartItems.length === 0) {\n    return (\n      <EmptyCart>\n        <EmptyCartIcon>🛒</EmptyCartIcon>\n        <EmptyCartMessage>Your cart is empty</EmptyCartMessage>\n        <EmptyCartSubtext>\n          Looks like you haven't added any items to your cart yet.\n        </EmptyCartSubtext>\n        <ContinueShoppingButton onClick={handleContinueShopping}>\n          Continue Shopping\n        </ContinueShoppingButton>\n      </EmptyCart>\n    );\n  }\n\n  return (\n    <CartContainer>\n      <CartContent>\n        <CartHeader>\n          <CartTitle>Shopping Cart</CartTitle>\n          <CartItemCount>\n            {totalItems} {totalItems === 1 ? 'item' : 'items'}\n          </CartItemCount>\n        </CartHeader>\n\n        <div>\n          {cartItems.map((item) => (\n            <CartItem key={item.id} item={item} />\n          ))}\n        </div>\n\n        <ActionsContainer>\n          <ClearCartButton onClick={handleClearCart}>\n            Clear Cart\n          </ClearCartButton>\n        </ActionsContainer>\n      </CartContent>\n\n      <CartSummary>\n        <SummaryTitle>Order Summary</SummaryTitle>\n\n        <SummaryRow>\n          <SummaryLabel>Subtotal ({totalItems} items)</SummaryLabel>\n          <SummaryValue>${subtotal.toFixed(2)}</SummaryValue>\n        </SummaryRow>\n\n        <SummaryRow>\n          <SummaryLabel>Shipping</SummaryLabel>\n          <SummaryValue>\n            {shipping === 0 ? 'Free' : `$${shipping.toFixed(2)}`}\n          </SummaryValue>\n        </SummaryRow>\n\n        <SummaryRow>\n          <SummaryLabel>Tax</SummaryLabel>\n          <SummaryValue>${tax.toFixed(2)}</SummaryValue>\n        </SummaryRow>\n\n        <SummaryRow>\n          <SummaryLabel>Total</SummaryLabel>\n          <SummaryValue>${total.toFixed(2)}</SummaryValue>\n        </SummaryRow>\n\n        <CheckoutButton onClick={handleCheckout}>\n          Proceed to Checkout\n        </CheckoutButton>\n\n        <Button\n          variant=\"outline\"\n          fullWidth\n          onClick={handleContinueShopping}\n          style={{ marginTop: '12px' }}\n        >\n          Continue Shopping\n        </Button>\n      </CartSummary>\n    </CartContainer>\n  );\n};\n\nexport default CartPage;"],"names":["StyledCard","styled","div","_ref5","variant","css","_ref","theme","colors","white","_ref2","shadows","medium","_ref3","_ref4","small","getVariantStyles","_ref6","padding","getPaddingStyles","_ref7","hover","_ref8","_ref9","onClick","Card","_ref10","children","className","_jsx","ItemContainer","lightGray","breakpoints","mobile","ImageContainer","ItemImage","img","ImagePlaceholder","lightText","ItemInfo","ItemTitle","h3","text","PriceContainer","Price","span","primary","OriginalPrice","ItemControls","QuantityControls","QuantityButton","Button","attrs","size","QuantityDisplay","_ref11","SubtotalContainer","_ref12","SubtotalLabel","_ref13","Subtotal","_ref14","RemoveButton","_ref15","secondary","_ref16","CartItemComponent","_ref17","_item$image","item","updateQuantity","removeFromCart","useCart","imageError","setImageError","useState","handleQuantityChange","newQuantity","id","subtotal","discountedPrice","quantity","toFixed","hasDiscount","price","_jsxs","image","url","src","alt","title","onError","loading","disabled","handleRemove","window","confirm","CartItem","memo","CartContainer","tablet","CartContent","CartHeader","CartTitle","h1","CartItemCount","EmptyCart","EmptyCartIcon","EmptyCartMessage","h2","EmptyCartSubtext","p","CartSummary","SummaryTitle","SummaryRow","SummaryLabel","SummaryValue","CheckoutButton","fullWidth","ContinueShoppingButton","ActionsContainer","ClearCartButton","CartPage","cartItems","getTotalPrice","clearCart","getItemCount","addToast","useToast","navigate","useNavigate","totalItems","tax","total","handleContinueShopping","length","map","handleClearCart","type","message","handleCheckout","style","marginTop"],"sourceRoot":""}